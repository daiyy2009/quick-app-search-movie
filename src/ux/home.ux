<template>
    <div class="container">
        <div>
            <input class="search-input" enterkeytype="search" onenterkeyclick="enterkeyclicked" placeholder="请输入电影名称、导演或演员" onchange="searchMovie">
            </input>
            <input class="search-btn" type="button" value="搜索" />
        </div>

        <!--tab组件-->
        <tabs onchange="changeTab">
            <tab-bar class="tab-bar">
                <!-- https://api.douban.com/v2/movie/search?q=张艺谋 -->
                <text class="tab-text">正在热映</text>
                <!-- https://api.douban.com/v2/movie/in_theaters?count=20 -->
                <text class="tab-text">即将上映</text>
                <!-- https://api.douban.com/v2/movie/coming_soon?count=20 -->
                <text class="tab-text">最近热门</text>
                <!-- https://api.douban.com/v2/movie/top250?count=20 -->
            </tab-bar>

            <tab-content class="tab-content">
                <!--热门-->
                <div class="content-container">
                    <list class="list" onscrollbottom="loadMoreData">
                        <list-item class="item" type="movie-item" for="moveList">
                            <div class="item-image">
                                <image src="{{$item.images.small}}"></image>
                            </div>
                            <text class="item-title">{{$item.title}}</text>
                            <div class="rating">
                                <rating class="rating-item" rating="{{$item.rating.average}}"></rating>
                                <text class="rating-score">{{$item.rating.average.toFixed(1)}}</text>
                            </div>
                        </list-item>
                    </list>

                    <div if="{{showLoading}}" class="load-more">
                        <progress type="circular"></progress>
                        <text>{{loadingText}}</text>
                    </div>

                </div>

                <div class="content-container">
                    <list class="list" onscrollbottom="loadMoreData">
                        <list-item class="item" type="movie-item" for="moveList">
                            <div class="item-image">
                                <image src="{{$item.images.small}}"></image>
                            </div>
                            <text class="item-title">{{$item.title}}</text>
                            <div class="rating">
                                <rating class="rating-item" rating="{{$item.rating.average}}"></rating>
                                <text class="rating-score">{{$item.rating.average.toFixed(1)}}</text>
                            </div>
                        </list-item>
                    </list>

                    <div if="{{showLoading}}" class="load-more">
                        <progress type="circular"></progress>
                        <text>{{loadingText}}</text>
                    </div>

                </div>

                <div class="content-container">
                    <list class="list" onscrollbottom="loadMoreData">
                        <list-item class="item" type="movie-item" for="moveList">
                            <div class="item-image">
                                <image src="{{$item.images.small}}"></image>
                            </div>
                            <text class="item-title">{{$item.title}}</text>
                            <div class="rating">
                                <rating class="rating-item" rating="{{$item.rating.average}}"></rating>
                                <text class="rating-score">{{$item.rating.average.toFixed(1)}}</text>
                            </div>
                        </list-item>
                    </list>

                    <div if="{{showLoading}}" class="load-more">
                        <progress type="circular"></progress>
                        <text>{{loadingText}}</text>
                    </div>

                </div>

            </tab-content>
        </tabs>
    </div>
</template>

<style lang="less">
    .container {
        flex-direction: column;
        color: #bbbbbb;

        .search-input {
            flex: 5;
            margin: 5px;
            border-radius: 5px;
            border-width: 2px;
            padding: 2px 10px;
            border-color: #2277AA;
            color: #666666;
            font-size: 32px;
        }

        .search-btn {
            flex: 1;
            height: 80px;
            text-align: center;
            border-radius: 10px;
            margin: 5px;
            color: #ffffff;
            font-size: 32px;
            background-color: #2277AA;
        }

        .tab-bar {
            height: 100px;
            border-color: #bbbbbb;
            border-bottom-width: 1px;

            .tab-text {
                width: 300px;
                height: 100px;
                text-align: center;
                font-size: 36px;

                &:active {
                    border-color: #2277AA;
                    border-bottom-width: 5px;
                    color: rgb(34, 119, 170);
                }
            }
        }

        .tab-content {
            flex: 1;
            padding: 5px;

            .content-container {
                flex-direction: column;

                .list {
                    columns: 3;
                    flex-direction: column;

                    .item {
                        height: 400px;
                        margin: 8px 8px 30px 8px;
                        flex-direction: column;

                        .item-image {
                            flex: 8;

                            image {
                                width: 100%;
                                height: 100%;
                            }
                        }

                        .item-title {
                            flex: 1.7
                        }

                        .rating {
                            flex: 1;

                            .rating-item {
                                flex: 4
                            }

                            .rating-score {
                                flex: 1;
                                text-align: right;
                            }
                        }
                    }
                }

                .load-more {
                    justify-content: center;
                    align-items: center;
                    height: 100px;
                }
            }

        }
    }
</style>

<script>
    /**
      TODO:
      1. title长的滚动
      2. loading 和 没有更多提示
     */
    import prompt from '@system.prompt'
    import fetch from '@system.fetch'

    export default {
        data: {
            key: 'in_theaters',
            keyMap: {
                0: 'in_theaters',
                1: 'coming_soon',
                2: 'top250'
            },

            count: 21,
            start: 0,
            total: 0,

            moveList: [],

            showLoading: false,
            loadingText: '加载数据',
        },
        onInit: function () {
            this.$page.setTitleBar({ text: '阅影' })
            this._loadData();
        },
        changeTab: function (e) {
            this._resetLoadData()
            this.key = this.keyMap[e.index]
            this._loadData()
        },
        setTime: function (e) {
            // time picker选择值后设置time
            this.time = e.hour + ":" + e.minute;
        },
        scrollbottom: function () {
            var that = this;
            // list滚动到底部事件
            setTimeout(function () {
                that.list_data = that.list_data.concat([{ name: "A" }, { name: "B" }, { name: "C" }, { name: "D" }]);
            }, 1000);
        },
        goIndex: function () {
            // list滚动到指定index位置
            this.$element('list').scrollTo({ index: 0, smooth: true })
        },
        searchMovie: function () {

        },
        loadMoreData: function () {
            if (this.start < this.total) {
                this.start = this.start + this.count
                this.loadingText = '加载更多'
                this._loadData()
            } else {
                console.log('no more data.')
            }
        },
        _getUrl: function (key) {
            return `https://api.douban.com/v2/movie/${key}?count=${this.count}&start=${this.start}`
        },
        _loadData: function () {
            this.showLoading = true;
            fetch.fetch({
                url: this._getUrl(this.key),
                success: (result) => {
                    let dataObj;
                    if (typeof result.data === 'string') {
                        dataObj = JSON.parse(result.data)
                    } else {
                        dataObj = result.data
                    }

                    this.start = dataObj.start;
                    this.total = dataObj.total;

                    if (dataObj.code === 112) {
                        prompt.showToast({
                            message: "对不起，已到达API调用次数限制，请明日再使用本软件。"
                        })
                        
                        this.showLoading = false;
                        return
                    }
                    this.moveList = this.moveList.concat(dataObj.subjects);
                    this.showLoading = false;
                },
                fail: function (data, code) {
                    console.log("handling fail, code = " + code);
                    this.showLoading = false;
                }
            })
        },
        _resetLoadData() {
            this.start = 0
            this.total = 0
            this.moveList = []
        }
    }
</script>
